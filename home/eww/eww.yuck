(deflisten workspace "scripts/workspace")
(deflisten volume "scripts/volume")

(defpoll spotify     :interval "1s" "cat /tmp/spotify_metadata.txt")
(defpoll spotify_art :interval "1s" "echo /tmp/spotify_art.jpg")
(defpoll time        :interval "1s" "date '+%a %d  -  %H : %M' | tr a-z A-Z")

(defwidget metric [text value class]
    (box
        :orientation "h"
        :halign "fill"
        :class class
        (label :class "label" :text text)
        (label :width 25 :class "value" :text value :xalign 0)))

(defwidget pc-status []
    (box
        :class "pc-status"
        :orientation "h"
        :halign "end"
        :space-evenly false
        (metric
            :text "􀫥"
            :class "metric cpu"
            :value {round(EWW_CPU.avg, 0)})
        (metric
            :text "􀫦"
            :class "metric ram"
            :value {round(EWW_RAM.used_mem_perc, 0)})))

(defwindow bar
    :monitor 0
    :geometry (geometry
                :x "16px"
                :y "0px"
                :width "1888px"
                :height "32px"
                :anchor "top left"
                :class "bar")
    :stacking "bottom"
    :windowtype "dock"
    (centerbox
        :orientation "h"
        :valign "center"
        :class "bar-content"
        (eventbox
            :cursor "pointer"
            :halign "start"
            :valign "center"
            (literal :content workspace))
        (eventbox
          :cursor "pointer"
          (box
              :valign "center"
              :space-evenly false
              ;; (image :path spotify_art :image-width 20 :image-height 20)
              (label :class "spotify-icon" :text {"${spotify.trackid}" == "" ? "": "阮  "})
              (label :text {"${spotify.trackid}" == "" ? "": "${spotify.title} - ${spotify.artist}"})))
        (box
            :orientation "h"
            :halign "end"
            :valign "center"
            :space-evenly false
            (eventbox
              :class "vol"
              :halign "end"
              :cursor "pointer"
              :onscroll "pactl set-sink-volume @DEFAULT_SINK@ $([[ '{}' == 'up' ]] && echo +2% || echo -2%)"
              :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"
              :onrightclick "audio_device_toggle"
              (box
                :space-evenly true
                :halign "end"
                :width 125
                (label :text {"${volume.type}" == "speaker" ? "􀝏" : "􀑈"} :class "volume-type")
                (label :text {"${volume.muted}"      ? "􀊢" :
                              "${volume.value}" < 15 ? "􀊠" :
                              "${volume.value}" < 30 ? "􀊤" :
                              "${volume.value}" < 60 ? "􀊦" : "􀊨"} :class "volume-icon")
                (label :text "${volume.value}%" :class "volume-value")))
            (pc-status)
            (label :class "metric time" :text time))))
